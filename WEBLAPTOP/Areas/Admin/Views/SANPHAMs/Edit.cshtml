@model WEBLAPTOP.Models.SANPHAM

@{
    ViewBag.Title = "Chỉnh sửa sản phẩm";
}

<main class="app-content">
    <div class="app-title">
        <ul class="app-breadcrumb breadcrumb side">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SANPHAMs")"><b>Danh sách sản phẩm</b></a></li>
            <li class="breadcrumb-item active"><a href="#">Chỉnh sửa sản phẩm</a></li>
        </ul>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="tile">
                <h3 class="tile-title">Chỉnh sửa thông tin sản phẩm</h3>

                @using (Html.BeginForm("Edit", "SANPHAMs", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ID_SP)
                    @Html.HiddenFor(model => model.NgayTao) // Giữ lại ngày tạo cũ
                    @Html.HiddenFor(model => model.SoLuongBan) // Giữ lại số lượng bán cũ (nếu cần)

                    <div class="tile-body">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.MaSP, "Mã sản phẩm", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.MaSP, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaSP, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(model => model.TenSP, "Tên sản phẩm", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Gia, "Giá nhập", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                    @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(model => model.GiaBan, "Giá bán", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                    @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.SoLuong, "Số lượng tồn", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                    @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(model => model.ID_DM, "Danh mục", htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(model => model.ID_DM, (IEnumerable<SelectListItem>)ViewBag.ID_DM, "--- Chọn danh mục ---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_DM, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Status_SP, "Trạng thái", htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(model => model.Status_SP, new SelectList(
                                        new[] {
                                            new { Value = "1", Text = "Hiện" },
                                            new { Value = "0", Text = "Ẩn" }
                                        }, "Value", "Text", Model.Status_SP), // Chọn giá trị hiện tại
                                        new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Status_SP, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-12">
                                    <label class="control-label">Ảnh sản phẩm</label>
                                    <div id="boxchoice" class="mb-3">
                                        <a href="javascript:" class="Choicefile btn btn-dark">
                                            <i class="fas fa-cloud-upload-alt"></i> Chọn ảnh
                                        </a>
                                        <input type="file" id="uploadfile" name="ImagesFile" style="display:none;" accept="image/*" onchange="readURL(this);" />
                                    </div>

                                    <div id="thumbbox" class="mt-2">
                                        <img src="#" alt="Thumb image" id="thumbimage" class="img-thumbnail" style="display:none; max-width:400px;" />
                                        <a class="removeimg btn btn-danger btn-sm mt-2" href="javascript:" style="display:none;">Xóa ảnh</a>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Mota, "Mô tả sản phẩm", htmlAttributes: new { @class = "form-label" })
                                    @Html.TextAreaFor(model => model.Mota, new { @class = "form-control", @rows = 5 })
                                    @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="tile-footer">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-save"></i> Lưu lại
                        </button>
                        &nbsp;&nbsp;&nbsp;
                        <a class="btn btn-secondary" href="@Url.Action("Index")">
                            <i class="fas fa-arrow-left"></i> Quay lại
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</main>
<script>
    // Khi click nút "Chọn ảnh" → kích hoạt input file ẩn
    document.querySelector('.Choicefile').addEventListener('click', function () {
        document.getElementById('uploadfile').click();
    });

    // Hàm xem trước ảnh khi người dùng chọn file
    function readURL(input) {
        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const thumbImg = document.getElementById('thumbimage');
                thumbImg.src = e.target.result;
                thumbImg.style.display = 'block';

                // Hiện nút Xóa ảnh
                document.querySelector('.removeimg').style.display = 'inline-block';
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    // Nút Xóa ảnh
    document.querySelector('.removeimg').addEventListener('click', function () {
        const thumbImg = document.getElementById('thumbimage');
        thumbImg.src = '#';
        thumbImg.style.display = 'none';
        document.getElementById('uploadfile').value = '';
        this.style.display = 'none';
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}